/* -----------------------------------------------------------------------------
  Filename:     desc.h
  Description:  Interface of CANdesc visible to any application.
                
                Manufacturer: Vector
                EcuDocFile:   C:\work\pr4\bms\nightwing\sw\mmc\proto\mmc_cfg\mmc.cdd
                Variant:      Common_Diagnostics

  Generated by  CANdelaGen Wed Feb 25 17:50:13 2015
 
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2006 by Vector Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vector Informatik 
  GmbH.
  
  Vector Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vector Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__DESC_H__)
#define __DESC_H__

/* -----------------------------------------------------------------------------
    &&&~ History
 ----------------------------------------------------------------------------- */

/* 
------------------------------------------------------------------------------------------------------------------------
                                             A U T H O R   I D E N T I T Y                                              
------------------------------------------------------------------------------------------------------------------------
Initials   Name                  Company                                                                                
---------- --------------------- ---------------------------------------------------------------------------------------
Ade        Alexander Ditte       Vector Informatik GmbH                                                                 
Her        Peter Herrmann        Vector Informatik GmbH                                                                 
Ktw        Katrin Thurow         Vector Informatik GmbH                                                                 
Mhe        Matthias Heil         Vector Informatik GmbH                                                                 
Sa         Mishel Shishmanyan    Vector Informatik GmbH                                                                 
------------------------------------------------------------------------------------------------------------------------
                                            R E V I S I O N   H I S T O R Y                                             
------------------------------------------------------------------------------------------------------------------------
Date       Version  Author Modification type Issue Id      Affects                        Description                    
---------- -------- ------ ----------------- ------------- ------------------------------ -------------------------------
2006-10-20 05.00.00
                    Sa     Modified          ESCAN00016884 UDS                            ComControl service compliance with the latest ISO-UDS (2005-05-29).
                    Sa     Modified          ESCAN00018098 All                            Unified security access management and API.
                    Sa     Added             ESCAN00017752 All                            OBD II compliance with regard to the NRC usage and response behavior.
                    Sa     Added             ESCAN00018099 All                            Add support for CANdela format 5.0.
2007-02-16 05.01.00
                    Sa     Fixed             ESCAN00018114 Vector(UDS)                    CANdesc not compilable if permanent repeated call is turned on.
                    Sa     Fixed             ESCAN00018916 Vector(UDS)                    Compile error on multi-channel system and service $28 support.
                    Sa     Fixed             ESCAN00018576 All                            Service instance linear look-up routine fails finding a requested service.
                    Sa     Fixed             ESCAN00019220 All                            Compile error for wrong syntax after preprocesing defines: DescUsdtNetStateTask and DescUsdtNetTimerTask.
                    Sa     Fixed             ESCAN00019334 All                            Generator: Unable to generate CANdesc with multi channel TP and CANgen newer than 4.30.03.
                    Sa     Modified          ESCAN00018872 All                            Wrong main-handler comment for constants names kDescReqTypePhys (-Func).
                    Sa     Modified          ESCAN00019321 All                            Remove file-path from the #include "node.h"
                    Sa     Modified          ESCAN00019735 All                            Use CPU type optimized data definition types (uintx_least).
                    Sa     Added             ESCAN00018320 All                            Generate P2 and P2* task-call constants with a justification of one task call less.
                    Sa     Added             ESCAN00018592 All                            DescRingBufferCancel API added.
2007-04-13 05.02.00
                    Sa     Added             ESCAN00020069 UDS                            Support for unified PID application handling.
2007-05-30 05.03.00
                    Sa     Fixed             ESCAN00020760 UDS                            Service $22 responds with wrong NRC $13 instead of $31 in case single DID mode has been selected
                    Sa     Modified          ESCAN00020840 All                            Compiler error message on local variable pointer to ROM using V_MEMROM0 define
                    Sa     Modified          ESCAN00019437 All                            Compiler error in desc.c with mem-model huge
2007-07-23 05.04.00
                    Sa     Added             ESCAN00021529 Vector(UDS)                    Support for services $27, $2C and $2A
                    Sa     Added             ESCAN00021530 UDS                            Support for custom rx communication path handling on service $28
                    Sa     Fixed             ESCAN00021336 All                            use lower case characters for names of generated files (AppDesc.h => appdesc.h)
                    Sa     Modified          ESCAN00021523 All                            Removed the first frame length dependency on Vector TP for for ring-buffer usage
                    Sa     Added             ESCAN00021528 All                            Stopping RepeatedServiceCall in RingBufferCancel
                    Sa     Added             ESCAN00021567 All                            Use case catch on RingBuffer usage with SPRMIB=1
2007-09-07 05.05.00
                    Sa     Fixed             ESCAN00022280 Vector(UDS)                    Linker error on API DescOemProcessSecurityAccess
                    Sa     Fixed             ESCAN00021610 UDS                            Incorrect NRC on an invalidly formatted writeDataByIdentifier ($2e) request for non-writeable DID
                    Sa     Fixed             ESCAN00021615 UDS                            Incorrect NRC on service with parameter identifier not supported in active session
                    Sa     Fixed             ESCAN00021800 UDS                            Wrong response lenght on service $22 in single DID mode
                    Sa     Added             ESCAN00022074 UDS                            Unified PID support on service $2E
                    Sa     Added             ESCAN00022075 UDS                            Unified PID support on service $22 in single PID mode
                    Sa     Fixed             ESCAN00022068 All                            Include appDesc.h changed to appdesc.h
                    Sa     Modified          ESCAN00021654 All                            Explicit suppression of NRC $11 on functional request
                    Sa     Modified          ESCAN00021252 All                            Compiler warnings for unreferenced variable and function declaration
                    Sa     Modified          ESCAN00022254 All                            Adaptions for the interrupt support of the latest VStdLib version
                    Sa     Added             ESCAN00021847 All                            Access to the current communication parameters
2007-10-22 05.05.01
                    Sa     Fixed             ESCAN00022373 Vector(UDS)                    Service $2C processor deletes all DID definitions on command clear single DID definition
                    Sa     Fixed             ESCAN00022658 Vector(UDS)                    Compiler warning: undefined macro 'kDescSecureTimer' is taken as 0
                    Sa     Modified          ESCAN00022853 UDS                            Allow for service $10 the P2 time report not to be present
2007-10-26 05.05.02
                    -      -                 -             -                              No relevant changes available in this version.
2007-11-15 05.05.03
                    Sa     Added             ESCAN00023231 All                            Support multiple ECU numbers   
2007-12-17 05.05.04
                    Sa     Added             ESCAN00023592 Vector(UDS)                    Support of Autosar DEM API     
                    Sa     Added             ESCAN00023684 Vector(UDS)                    Automatic detection of P2/P2Ex parameters for service $10
2007-12-20 05.06.00
                    Sa     Fixed             ESCAN00022373 Vector(UDS)                    Service $2C processor deletes all DID definitions on command clear single DID definition
                    Sa     Fixed             ESCAN00022658 Vector(UDS)                    Compiler warning: undefined macro 'kDescSecureTimer' is taken as 0
                    Sa     Fixed             ESCAN00023846 Vector(UDS)                    Service $2C processor always deletes all DID definitions on command clear single DID definition
                    Sa     Added             ESCAN00023684 Vector(UDS)                    Automatic detection of P2/P2Ex parameters for service $10
                    Sa     Modified          ESCAN00022853 UDS                            Allow for service $10 the P2 time report not to be present
                    Sa     Modified          ESCAN00022868 UDS                            Consider CDD files having only SID based information (CANdescBasic like)
                    Sa     Added             ESCAN00023231 All                            Support multiple ECU numbers   
2008-01-22 05.06.01
                    Sa     Fixed             ESCAN00023944 Vector(UDS)                    Invalid data responded with service $22 (ReadDataByIdentifier)
                    Sa     Modified          ESCAN00023488 Vector(UDS)                    The example code for SecurityAccess seed writes the SEED in intel instead of motorola format
                    Mhe    Added             ESCAN00024016 Vector(UDS)                    Support for Bosch UAcc interface generated main handlers
                    Sa     Modified          ESCAN00024147 UDS                            Specify suppressPosRes DescMsgContext member as read-only item and not read-write
                    Sa     Fixed             ESCAN00026046 All                            CANdesc responds on wrong CAN Id
                    Mhe    Added             ESCAN00024011 All                            Support dynamic normal addressing
                    Mhe    Added             ESCAN00024019 All                            Support far RAM Tp API         
2008-02-04 05.06.02
                    -      -                 -             -                              No relevant changes available in this version.
2008-01-11 05.06.03
                    -      -                 -             -                              No relevant changes available in this version.
2008-03-14 05.06.04
                    Mhe    Added             ESCAN00024951 UDS                            Internal support for read/write memory by address
                    Sa     Added             ESCAN00024929 UDS                            Allow unified PID handling for service $22 wihtout multiple PID support
2008-04-03 05.06.05
                    Sa     Fixed             ESCAN00025410 Vector(UDS)                    Virtual requests, triggered by the RoE handler, restart the S1 timer
                    Sa     Fixed             ESCAN00025381 Vector(UDS)                    Context specific access to UACC functions
                    Sa     Fixed             ESCAN00025753 UDS                            Supported PIDs will not be recognized if service $2F is also available in the system
2008-04-21 05.06.06
                    Sa     Fixed             ESCAN00026438 Vector(UDS)                    Deadlock on RoE with a monitored DDDID
                    Her    Fixed             ESCAN00026454 Vector(UDS)                    RoE processing does not match the specification
                    Her    Added             ESCAN00026453 Vector(UDS)                    RoE event counter              
                    Sa     Fixed             ESCAN00026335 All                            Compile error with DynamicTP   
2008-05-23 05.06.07
                    Sa     Fixed             ESCAN00027056 Vector(UDS)                    Virtual request can overwrite ongoing RoE spontaneous response
                    Ade    Added             ESCAN00027064 Vector(UDS)                    ReadMemoryByAddress UACC ring-buffer/linear-buffer support
                    Sa     Added             ESCAN00027066 Vector(UDS)                    Additional notifications ApplDescOnBeginOfProc ApplDescOnEndOfProc
                    Sa     Added             ESCAN00027067 Vector(UDS)                    Added shared resource management in DanisDispatcher
                    Sa     Fixed             ESCAN00027058 UDS                            Compile error on generated main-handler with ring-buffer access an single PID mode
                    Sa     Fixed             ESCAN00026907 All                            On TMS320 wrong vstdlib memcopy API used
                    Sa     Fixed             ESCAN00027059 All                            Array out of boundary access error on generated main-handler with ring-buffer access
                    Sa     Modified          ESCAN00027061 All                            Minor DescICN driver optimization
                    Sa     Modified          ESCAN00027063 All                            MainHandler req-/resDataLen has misleading description for CANdescBasic
                    Ktw    Modified          ESCAN00027057 All                            Compile error on missing semicolon for DescSetNpmOnCanChannelActive macro expansion
                    Mhe    Added             ESCAN00026452 All                            Posthandler support for generated $23
2008-05-26 05.06.08
                    Sa     Fixed             ESCAN00027060 UDS                            Wrong assertion in case of negative response on service 0x22 and multiple PID mode
                    Sa     Fixed             ESCAN00027085 UDS                            Compile error on configurations without service $2A or $2C
                    Sa     Fixed             ESCAN00027084 All                            Compile error on non TMS320 platforms
2008-06-05 05.06.09
                    -      -                 -             -                              No relevant changes available in this version.
2008-06-16 05.06.10
                    -      -                 -             -                              No relevant changes available in this version.
------------------------------------------------------------------------------------------------------------------------
 */


/* -----------------------------------------------------------------------------
    &&&~ Includes
 ----------------------------------------------------------------------------- */

/* include of TP interface */
#include "tpmc.h"



/* -----------------------------------------------------------------------------
    &&&~ Configuration switches
 ----------------------------------------------------------------------------- */

#if defined (V_ENABLE_USE_DUMMY_STATEMENT)
/* Everything ok */
#else
# if defined (V_DISABLE_USE_DUMMY_STATEMENT)
  /* Everything ok */
# else
  /* Define compatibile switch in case of older tools */
#  define V_ENABLE_USE_DUMMY_STATEMENT
# endif
#endif

/* Flashable ECU will not be supported. */
#define DESC_DISABLE_FLASHABLE_ECU
/* Vectors FBL will not be supported. */
#define DESC_DISABLE_VECTOR_FBL_USAGE
/* KWP2000 diagnostic protocol will not be supported. */
#define DESC_DISABLE_PROTOCOL_KWP
/* UDS diagnostic protocol will be supported. */
#define DESC_ENABLE_PROTOCOL_UDS
/* Application debug monitoring will be supported. */
#define DESC_ENABLE_DEBUG_USER
/* Internal processes' debug monitoring will be supported. */
#define DESC_ENABLE_DEBUG_INTERNAL
/* Transport layer type */
#if defined (TP_ENABLE_SINGLE_CHANNEL_TP)
# define DESC_USDTNET_DISABLE_MULTI_TP
# define DESC_USDTNET_ENABLE_SINGLE_TP_OPTIMIZED
#else
# define DESC_USDTNET_ENABLE_MULTI_TP
# define DESC_USDTNET_DISABLE_SINGLE_TP_OPTIMIZED
#endif

#if (TP_USE_EXTENDED_ADDRESSING == kTpOn) || \
    defined (TP_ENABLE_NORMAL_FIXED_ADDRESSING) || \
    defined (TP_ENABLE_MIXED_29_ADDRESSING)
# define DESC_ENABLE_ACCESS_TESTER_ADDRESS_API
#endif

/* LongServiceExecution will not be supported. */
#define DESC_USDTNET_DISABLE_LONGSERVICE_SUPPORT
/* Ring buffer will not be supported. */
#define DESC_USDTNET_DISABLE_RING_BUFFER
/* Far RAM buffer will not be supported. */
#define DESC_USDTNET_DISABLE_FAR_BUFFER
/* Shared buffer multi client usage will not be supported. */
#define DESC_USDTNET_DISABLE_MULTI_OWNER_SHARED_BUFFER
/* Static buffer allocation */
#define DESC_USDTNET_ENABLE_VECTOR_ISO_TP

/* UUDT Network will not be supported. */
#define DESC_DISABLE_UUDT_NET
/* Bus abstraction will not be supported. */
#define DESC_DISABLE_USDT_MULTI_BUS_SUPPORT
/* Spontaneous response will not be supported. */
#define DESC_DISABLE_SPONTANEOUS_RES
/* Secured data transmission API will not be supported. */
#define DESC_DISABLE_SECURED_DATA_TRANSMISSION
/* Multi channel system will be supported. */
#define DESC_ENABLE_MULTI_CHANNEL_SUPPORT
#if defined (C_SINGLE_RECEIVE_CHANNEL) || defined (C_MULTIPLE_RECEIVE_CHANNEL)
/* Code-doubled CANdriver will not be supported. */
#define DESC_DISABLE_CODE_DOUBLED_DRIVER_API
#endif
#if !defined (C_SINGLE_RECEIVE_CHANNEL) && !defined (C_MULTIPLE_RECEIVE_CHANNEL)
/* Code-doubled CANdriver will be supported. */
#define DESC_ENABLE_CODE_DOUBLED_DRIVER_API
#endif
/* Parallel reception and rejection diagnostic service will not be supported. */
#define DESC_DISABLE_BUSY_REPEAT_RESPONDER
/* Additional OBD reception path will be supported. */
#define DESC_ENABLE_OBD_FUNC_REQUEST
/* Parallel handling of OBD service will not be supported. */
#define DESC_DISABLE_PARALLEL_OBD
/* CCL usage */
#if defined (VGEN_ENABLE_CCL)
# define DESC_ENABLE_CCL_SUPPORT
#else
# define DESC_DISABLE_CCL_SUPPORT
#endif
/* Transport layer type */
#if defined (TP_ENABLE_SINGLE_CHANNEL_TP)
# define DESC_DISABLE_MULTI_TP
# define DESC_ENABLE_SINGLE_TP_OPTIMIZED
#else
# define DESC_ENABLE_MULTI_TP
# define DESC_DISABLE_SINGLE_TP_OPTIMIZED
#endif

/* Addressing information validation */
#define DESC_DISABLE_PHYSREQ_TA_CHECK
#define DESC_DISABLE_PHYSREQ_SA_CHECK

#define DESC_DISABLE_FUNCREQ_TA_CHECK
#define DESC_DISABLE_FUNCREQ_SA_CHECK

/* Enable response on requests whic SID are in range 
 * [0x40, 0x7F]U[0xC0, 0xFF]
 */
#define DESC_ENABLE_NEG_RES_ON_SID_WITH_SET_BIT6

/* TesterPresent monitoring will be supported. */
#define DESC_ENABLE_S1_TIME_MONITORING
/* No RCR-RP limitation will be used. */
#define DESC_DISABLE_RES_PENDING_TIME_LIMIT
#define DESC_DISABLE_RES_PENDING_COUNT_LIMIT
/* Application forced RCR-RP response transmission will not be supported. */
#define DESC_DISABLE_FORCE_RCR_RP
/* Session specific P2 (P2*) timings will not be supported. */
#define DESC_DISABLE_DYNAMICAL_P2_TIMINGS
/* Disable special handling on RCR-RP limit expiration (e.g. send negative response $71) */
#define DESC_DISABLE_OEM_HANDLING_ON_RCRRP_LIMIT_EXPIRATION

/* Automaticaly managed states will be supported. */
#define DESC_ENABLE_AUTO_STATES
/* Don't check on SID level the addressing method */
#define DESC_DISABLE_ADDR_METHOD_CHECK_ON_SID
/* Do not ignore the SPRMIB (mask out but response will be sent) */
#define DESC_DISABLE_POS_RES_ON_SET_SPRMIB

/* Do distinguish between sub-function and identifier */
#define DESC_DISABLE_SAME_NRC_ON_SUB_FUNC_AND_PARAM_ID

/* Each main-handler will be called only once. The application shall take care about calling DescProcessingDone from somwhere at the end of the request process. */
#define DESC_DISABLE_MAINHANDLER_MULTICALL
#define DESC_DISABLE_INDIVIDUAL_MAINHANDLER_MULTICALL
#define DESC_DISABLE_PERMANENT_MAINHANDLER_MULTICALL
/* Request minimum length check will be supported. */
#define DESC_ENABLE_MIN_REQ_LEN_CHECK
/* Any pre-Handler from the SvcInst table will not be supported. */
#define DESC_DISABLE_PREHANDLER_USAGE
/* Any post-Handler from the SvcInst table will be supported. */
#define DESC_ENABLE_POSTHANDLER_USAGE
/* User (unknown) service-handler will not be supported. */
#define DESC_DISABLE_GENERIC_USER_SERVICE_SUPPORT
/* User (unknown) service post-handler will not be supported. */
#define DESC_DISABLE_GENERIC_USER_POST_HANDLER_SUPPORT
/* Session check before format check will not be supported. */
#define DESC_DISABLE_SESSION_FORMAT_STATE_CHECK
/* If OBD services are present enable conformance */
#if defined (DESC_ENABLE_OBD_FUNC_REQUEST)
# define DESC_ENABLE_OBDII_NR_CONFORMANCE
#endif

/* Pre-handlers will not be supported. */
#define DESC_DISABLE_ANY_PREHANDLER_USAGE
/* Post-handlers will be supported. */
#define DESC_ENABLE_ANY_POSTHANDLER_USAGE
/* Use linear search for optimal runtime. */
#define DESC_DISABLE_BINARY_SVCINST_SEARCH
#define DESC_ENABLE_LINEAR_SVCINST_SEARCH
/* Sub-service protocol information will be supported. */
#define DESC_ENABLE_SUB_SVC_USAGE
/* Self-transition workaround will not be supported. */
#define DESC_DISABLE_SESSION_SELFTRANSITION_SIM
/* Communication control service will be supported. */
#define DESC_ENABLE_COMM_CTRL
/* Dynamic communication parameters will be supported. */
#define DESC_ENABLE_DYN_COM_CTRL_PARAM
/* Communication control on RX path will not be supported. */
#define DESC_DISABLE_RX_COMM_CONTROL
/* Communciation control based on subnetworks will be supported. */
#define DESC_ENABLE_COMM_CTRL_SUBNET_SUPPORT
/* Programming session OEM handling will be supported. */
#define DESC_ENABLE_PROGRAMMING_SESSION
/* P2 and P2Ex times report in the positive response of DiagSessionControl will be supported. */
#define DESC_ENABLE_P2_TIME_REPORT
/* Security access service will be supported. */
#define DESC_ENABLE_SECURITY_ACCESS
/* PowerOn timer activation will not be supported. */
#define DESC_DISABLE_START_SA_TIMER_ON_POWERON
/* Attempt counter reset on valid key will not be supported. */
#define DESC_DISABLE_ATT_CNTR_RESET_ON_KEY_OK
/* Seed protection by seed repetition will not be supported. */
#define DESC_DISABLE_USE_OLD_SEED_PROTECTION
/* Seed protection by attempt counter increment will be supported. */
#define DESC_ENABLE_USE_ERR_CNTR_PROTECTION
/* Seed protection level dependence will be supported. */
#define DESC_ENABLE_LEVEL_SPECIFIC_SEED_PROTECTION
/* Multiple seed length will not be supported. */
#define DESC_DISABLE_MULTIPLE_SEED_LENGTH
/* Unified PID management will not be supported. */
#define DESC_DISABLE_UNIFIED_PID_MGR
/* PidList mode simulation will be supported. */
#define DESC_ENABLE_SIM_PID_LIST_MODE
/* PIDs pre-Handlers will not be supported. */
#define DESC_DISABLE_PID_PREHANDLER_USAGE
/* PIDs post-Handlers will not be supported. */
#define DESC_DISABLE_PID_POSTHANDLER_USAGE
/* Combinable PID with dynamic data length will not be supported. */
#define DESC_DISABLE_DYN_DID_RES_LENGTH
#define DESC_DISABLE_PID_SECURITY_FILTER
/* Routine control management will not be supported. */
#define DESC_DISABLE_ROUTINE_CONTROL_MODE
/* Scheduled PID will not be supported. */
#define DESC_DISABLE_PERIODIC_MODE
/* No periodical transmission. */
#define DESC_DISABLE_SCHEDULER_UUDT_TRANSMITTER
#define DESC_DISABLE_SCHEDULER_USDT_TRANSMITTER
/* Multiple PID in single request will not be supported. */
#define DESC_DISABLE_PID_LIST_MODE
/* Dynamically defined DIDs will not be supported. */
#define DESC_DISABLE_DYN_DEFINED_DID_MODE
/* Dynamically defined by Id DIDs will not be supported. */
#define DESC_DISABLE_DEF_DYN_ID_BY_PID
/* Dynamically defined by memory DIDs will not be supported. */
#define DESC_DISABLE_DEF_DYN_ID_BY_MEM
/* Dynamically defined DPIDs will not be supported. */
#define DESC_DISABLE_DYN_DEFINED_DPID_MODE
/* ResponseOnEvent service will not be supported. */
#define DESC_DISABLE_ROE_SUPPORT
/* Ring-buffer handling will not be supported. */
#define DESC_DISABLE_RES_RINGBUFFER


/* -----------------------------------------------------------------------------
    &&&~ Preprocessor constants (defines)
 ----------------------------------------------------------------------------- */

/* ##V_CFG_MANAGEMENT ##CQProject : Diag_CanDesc__core CQComponent : Implementation */
#define DIAG_CANDESC__CORE_VERSION                                   0x0506
#define DIAG_CANDESC__CORE_RELEASE_VERSION                           0x10
#define DESC_VERSION                                                 0x0506
#define DESC_RELEASE_VERSION                                         0x10
/* Desc generic return codes */
#define kDescOk                                                      ((vuint8)0x00)
#define kDescFailed                                                  ((vuint8)0x01)
/*  data type according to the CPU type */
#if defined( C_CPUTYPE_8BIT )
/* 8-Bit qualifier */
# ifndef vuint8_least
#  define vuint8_least                                               vuintx
# endif
# ifndef vsint8_least
#  define vsint8_least                                               vsintx
# endif
#else
# if defined( C_CPUTYPE_16BIT )
/* 16-Bit qualifier */
#  ifndef vuint8_least
#   define vuint8_least                                              vuintx
#  endif
#  ifndef vsint8_least
#   define vsint8_least                                              vsintx
#  endif
#  ifndef vuint16_least
#   define vuint16_least                                             vuintx
#  endif
#  ifndef vsint16_least
#   define vsint16_least                                             vsintx
#  endif

# else
#  if defined( C_CPUTYPE_32BIT )
/* 32-Bit qualifier */
#   ifndef vuint8_least
#    define vuint8_least                                             vuintx
#   endif
#   ifndef vsint8_least
#    define vsint8_least                                             vsintx
#   endif
#   ifndef vuint16_least
#    define vuint16_least                                            vuintx
#   endif
#   ifndef vsint16_least
#    define vsint16_least                                            vsintx
#   endif
#   ifndef vuint32_least
#    define vuint32_least                                            vuintx
#   endif
#   ifndef vsint32_least
#    define vsint32_least                                            vsintx
#   endif
#  endif
# endif
#endif

/* Default optimized types */
#ifndef vuint8_least
# define vuint8_least                                                vuint8
#endif
#ifndef vuint16_least
# define vuint16_least                                               vuint16
#endif
#ifndef vuint32_least
# define vuint32_least                                               vuint32
#endif

#ifndef vsint8_least
# define vsint8_least                                                vsint8
#endif
#ifndef vsint16_least
# define vsint16_least                                               vsint16
#endif
#ifndef vsint32_least
# define vsint32_least                                               vsint32
#endif

/* Optimized boolean type */
#ifndef vboolean
# define vboolean                                                    vuint8_least
#endif

#ifndef V_BOOL_TRUE
# define V_BOOL_TRUE                                                 (vboolean)1
#endif

#ifndef V_BOOL_FALSE
# define V_BOOL_FALSE                                                (vboolean)0
#endif
/* CANdesc API types use the CANdesc namings convention! */
#define kDescFalse                                                   V_BOOL_FALSE
#define kDescTrue                                                    V_BOOL_TRUE
#if defined (V_ENABLE_USE_DUMMY_STATEMENT)
# define DESC_IGNORE_UNREF_PARAM(paramName)                          (paramName = paramName)
#else
# define DESC_IGNORE_UNREF_PARAM(paramName)                          /* do nothing */
#endif

#if !defined (VUINT8_CAST)
# if defined ( C_COMP_COSMIC_HC08 ) || defined ( C_COMP_COSMIC_HC12 ) /* any cosmic cpu */
#  define VUINT8_CAST                                                (vuint8)
#  define VSINT8_CAST                                                (vsint8)
#  define VUINT16_CAST                                               (vuint16)
#  define VSINT16_CAST                                               (vsint16)
#  define CANBITTYPE_CAST                                            (vbittype)
#  define CANSINTCPUTYPE_CAST                                        (int)
#  define CANUINTCPUTYPE_CAST                                        (unsigned int)
# else
#  define VUINT8_CAST
#  define VSINT8_CAST
#  define VUINT16_CAST
#  define VSINT16_CAST
#  define CANBITTYPE_CAST
#  define CANSINTCPUTYPE_CAST
#  define CANUINTCPUTYPE_CAST
# endif /* ( C_COMP_COSMIC_HC08 ) || defined ( C_COMP_COSMIC_HC12 ) */
#endif

#if defined (V_MEMROM0)
/* new driver ok */
#else
# define V_MEMROM0
#endif


#if defined (V_MEMROM1)
/* new driver ok */
#else
# define V_MEMROM1
#endif

#if defined (V_MEMROM2)
/* new driver ok */
#else
# define V_MEMROM2                                                   MEMORY_ROM
#endif

#if defined (V_MEMROM3)
/* new driver ok */
#else
# define V_MEMROM3
#endif

#if !defined(DESC_API_CALL_TYPE)
  /* No paging used. */
  #define DESC_API_CALL_TYPE
#endif

#if !defined(DESC_API_CALLBACK_TYPE)
  /* No paging used. */
  #define DESC_API_CALLBACK_TYPE
#endif

#if !defined(TP_API_CALLBACK_TYPE)
  /* No paging used. */
  #define TP_API_CALLBACK_TYPE
#endif

#if !defined(DRV_API_CALLBACK_TYPE)
  /* No paging used. */
  #define DRV_API_CALLBACK_TYPE
#endif

#if !defined(DRV_API_CALL_TYPE)
  /* No paging used. */
  #define DRV_API_CALL_TYPE
#endif

/* Far addressing of diagnostic buffer will not be supported. */
#define DESC_DISABLE_FAR_BUFFER
#if defined(DESC_ENABLE_FAR_BUFFER)
  #define DESC_BUFFER_MEMORY_MODEL     V_MEMRAM1_FAR
#else
  #define DESC_BUFFER_MEMORY_MODEL
#endif

/* This magic number provides inter CANdesc generation process consistency check.All CANdesc files must have the same one. */
#define DESC_PUBLIC_INTERFACE_MAGIC_NUMBER                           24158
/* ---  Debug assertion codes  --- */
#define kDescAssertWrongTpTxChannel                                  0x00
#define kDescAssertCanBufferIsNullPointer                            0x01
#define kDescAssertIndexTableInvalidReference                        0x02
#define kDescAssertSvcTableUnreachableItem                           0x03
#define kDescAssertSvcTableInvalidReference                          0x04
#define kDescAssertSvcTableInconsistentNumber                        0x05
#define kDescAssertMissingMainHandler                                0x06
/* Obsolete: 
#define kDescAssertSFMsgTooLong                                      0x07
*/
#define kDescAssertInvalidContextId                                  0x08
#define kDescAssertSvcTableIndexOutOfRange                           0x09
#define kDescAssertSvcInstTableIndexOutOfRange                       0x0A
#define kDescAssertContextIdWasModified                              0x0B
/* Obsolete: 
#define kDescAssertContextPointerWasModified                         0x0C
#define kDescAssertWrongTpRxChannel                                  0x0D
*/
#define kDescAssertProcessingDoneCallAfterResFlushing                0x0E
#define kDescAssertTooLongSingleFrameResponse                        0x0F
/* Obsolete: 
#define kDescAssertIllegalTxModeState                                0x10
*/
#define kDescAssertApplLackOfConfirmation                            0x11
/* Obsolete: 
#define kDescAssertUnconfirmedSecureServiceUsed                      0x12
*/
#define kDescAssertZeroStateValue                                    0x13
/* Obsolete: 
#define kDescAssertSecureServiceFunctionallyRequested                0x14
#define kDescAssertInvalidCanChannel                                 0x15
*/
#define kDescAssertInvalidContextMode                                0x16
#define kDescAssertUnexpectedWriteIntoRingBuffer                     0x17
#define kDescAssertRingBufferWriteExceedsTheResLen                   0x18
/* Obsolete: 
#define kDescAssertIllegalUsageOfRingBufferWithPidListMode           0x19 
#define kDescAssertIllegalUsageOfNegativeResponse                    0x1A
*/
#define kDescAssertDiagnosticBufferOverflow                          0x1B
#define kDescAssertFuncReqWoResMayNotUseRingBuffer                   0x1C
/* Obsolete: 
#define kDescAssertContextChannelRelationLost                        0x1D
*/
#define kDescAssertSchedulerTimerEventWithoutAnyPID                  0x1E
#define kDescAssertSchedulerRingBufferIsActivated                    0x1F
/* Obsolete: 
#define kDescAssertSchedulerWrongContextMode                         0x20
*/
#define kDescAssertUnknownTpTransmissionType                         0x21
#define kDescAssertIllegalAddRequestCount                            0x22
#define kDescAssertNoSidCanBeReportedInIdleMode                      0x23
#define kDescAssertInvalidUsageOfForceRcrRpApi                       0x24
/* Obsolete: 
#define kDescAssertRoeResponderWrongContextMode                      0x25
*/
#define kDescAssertPidResLenToCddDefNotMatched                       0x26
#define kDescAssertPidResLenToCurrLinearFreeSpace                    0x27
#define kDescAssertMissingDataForTransmission                        0x28
#define kDescAssertSchedulerFreeCellNotFound                         0x29
#define kDescAssertInvalidStateParameterValue                        0x2A
#define kDescAssertNoFreeICNChannel                                  0x2B
#define kDescAssertInvalidDescICNClient                              0x2C
#define kDescAssertNoFreeMsgContext                                  0x2D
#define kDescAssertUnExpectedContextWithResponse                     0x2E
#define kDescAssertIllegalCallOfRingBufferCancel                     0x2F
#define kDescAssertIllegalUsageOfRingBufferOnSupprPosRes             0x30
#define kDescAssertWrongFblPosResParameterValue                      0x31 /* former 0xA1 */

#define kDescAssertRoeUnexpectedEventNRC                             0x32
#define kDescAssertRoeUnexpectedEventSid                             0x33
/* Obsolete
#define kDescAssertRoeGeneralTransmissionError                       0x34
#define kDescAssertRoeNumEventsIsEmpty                               0x35
*/
#define kDescAssertRoeUnexpectedEventType                            0x36

#define kDescAssertMemByAddrUnexpectedType                           0x37
#define kDescAssertRoeUnexpectedResultLength                         0x38

/* DescNet assertions numbers */
#define kDescNetAssertWrongIsoTpRxChannel                            0x40
#define kDescNetAssertWrongIsoTpTxChannel                            0x41
#define kDescNetAssertWrongBusType                                   0x42

#define kDescNetAssertIllegalPduId                                   0x43




/* DescICNNet assertions numbers */
#define kDescAssertDescIcnIllegalTargetPointer                       0x50

/* -----------------------------------------------------------------------------
    &&&~ Negative response codes
 ----------------------------------------------------------------------------- */

#define kDescNrcGeneralReject                                        0x10
#define kDescNrcServiceNotSupported                                  0x11
#define kDescNrcSubfunctionNotSupported                              0x12
#define kDescNrcInvalidFormat                                        0x13
#define kDescNrcResponseTooLong                                      0x14
#define kDescNrcBusyRepeatRequest                                    0x21
#define kDescNrcConditionsNotCorrect                                 0x22
#define kDescNrcRequestSequenceError                                 0x24
#define kDescNrcRequestOutOfRange                                    0x31
#define kDescNrcAccessDenied                                         0x33
#define kDescNrcInvalidKey                                           0x35
#define kDescNrcExceedNumOfAttempts                                  0x36
#define kDescNrcTimeDelayNotExpired                                  0x37
#define kDescNrcUploadDownloadNotAccepted                            0x70
#define kDescNrcTransferDataSuspended                                0x71
#define kDescNrcGeneralProgrammingFailure                            0x72
#define kDescNrcWrongBlockSequenceCounter                            0x73
#define kDescNrcResponsePending                                      0x78
#define kDescNrcSubfunctionNotSupportedInActiveSession               0x7E
#define kDescNrcServiceNotSupportedInActiveSession                   0x7F
#define kDescNrcRpmTooHigh                                           0x81
#define kDescNrcRpmTooLow                                            0x82
#define kDescNrcEngineIsRunning                                      0x83
#define kDescNrcEngineIsNotRunning                                   0x84
#define kDescNrcEngineRunTimeTooLow                                  0x85
#define kDescNrcTemperatureTooHigh                                   0x86
#define kDescNrcTemperatureTooLow                                    0x87
#define kDescNrcVehicleSpeedTooHigh                                  0x88
#define kDescNrcVehicleSpeedTooLow                                   0x89
#define kDescNrcThrottleSpeedTooHigh                                 0x8A
#define kDescNrcThrottleSpeedTooLow                                  0x8B
#define kDescNrcTransmissionRangeInNeutral                           0x8C
#define kDescNrcTransmissionRangeInGears                             0x8D
#define kDescNrcBrakeSwitchNotClosed                                 0x8F
#define kDescNrcShifterLeverNotInPark                                0x90
#define kDescNrcTorqueConverterClutchLocked                          0x91
#define kDescNrcVoltageTooHigh                                       0x92
#define kDescNrcVoltageTooLow                                        0x93


#if defined(DESC_USDTNET_ENABLE_FAR_BUFFER)
# define DESC_USDTNET_BUF_MEMORY_MODEL                               V_MEMRAM1_FAR
#else
# define DESC_USDTNET_BUF_MEMORY_MODEL                               /* Empty */
#endif

#define kDescNumCommChannels                                         3
#define kDescCanChannel                                              0
#define kDescNumContexts                                             1
#define kDescPrimBufferLen                                           1280
#if defined (DESC_ENABLE_MULTI_CHANNEL_SUPPORT)
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY                     vuint8_least commChannel
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_FIRST                    DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY,
# define DESC_COMM_CHANNEL_PARAM_VALUE                               commChannel
# define DESC_COMM_CHANNEL_PARAM_ONLY                                commChannel
# define DESC_COMM_CHANNEL_PARAM_FIRST                               DESC_COMM_CHANNEL_PARAM_ONLY,
# define DESC_COMM_CHANNEL_LOCAL_PARAM_DEF                           DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY;
# define DESC_COMM_CHANNEL_PARAM_VALUE_INIT                          DESC_COMM_CHANNEL_PARAM_VALUE = kDescNumCommChannels
# define DESC_COMM_CHANNEL_PARAM_VALUE_DEC                           DESC_COMM_CHANNEL_PARAM_VALUE--
# define DESC_COMM_CHANNEL_LOOP                                      while(commChannel != 0)
# define DESC_COMM_CHANNEL_PARAM_WRAP_ONLY(channel)                  (channel)
# define DESC_COMM_CHANNEL_PARAM_WRAP_INDEX(channel)                 (channel)
#else
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY                     void
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_FIRST
# define DESC_COMM_CHANNEL_PARAM_ONLY
# define DESC_COMM_CHANNEL_PARAM_FIRST
# define DESC_COMM_CHANNEL_PARAM_VALUE                               0
# define DESC_COMM_CHANNEL_LOCAL_PARAM_DEF
# define DESC_COMM_CHANNEL_PARAM_VALUE_INIT
# define DESC_COMM_CHANNEL_PARAM_VALUE_DEC
# define DESC_COMM_CHANNEL_LOOP
# define DESC_COMM_CHANNEL_PARAM_WRAP_ONLY(channel)
# define DESC_COMM_CHANNEL_PARAM_WRAP_INDEX(channel)                 0
#endif

/* If more than one parallel request may be processed - use real context */
#if (kDescNumContexts > 1)
# define DESC_CONTEXT_PARAM_TYPE_ONLY                                vuint8                                                /* Used in CANdesc for function prototypes */
# define DESC_CONTEXT_PARAM_TYPE_FIRST                               vuint8,                                               /* Used in CANdesc for function prototypes */
# define DESC_CONTEXT_PARAM_VALUE                                    iContext                                              /* Used in CANdesc context accesses as "g_descMsgContext[DESC_CONTEXT_PARAM_VALUE].reqDataLen" in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_PARAM_ONLY                                     iContext                                              /* Used in application/CANdesc functions as DescProcessingDone(DESC_CONTEXT_PARAM_ONLY), in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_PARAM_FIRST                                    iContext,                                             /* Used in application/CANdesc functions as DescSetNegResponse(DESC_CONTEXT_PARAM_FIRST, kDescNrcCode), in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY                          DESC_CONTEXT_PARAM_TYPE_ONLY DESC_CONTEXT_PARAM_ONLY  /* Used in application/CANdesc functions as DescProcessingDone(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);*/
# define DESC_CONTEXT_PARAM_DEF_LOCAL                                DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY;                   /* Used in functions as a local variable definition so it can be used with all other optimization macros */
# define DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST                         DESC_CONTEXT_PARAM_TYPE_ONLY DESC_CONTEXT_PARAM_ONLY, /* Used in application/CANdesc functions as ApplDescPostHandler(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST vuint8 status) */
# define DESC_CONTEXT_PARAM_WRAPPER_ONLY(contextConst)               contextConst                                          /* Used in call backs as DescProcessingDone(DESC_CONTEXT_PARAM_WRAPPER_ONLY(pMsgContext->iContext)) as universal ignore parameter macro */
# define DESC_CONTEXT_PARAM_WRAPPER_FIRST(contextConst)              contextConst,                                         /* Used in call backs as DescSetNegResponse(DESC_CONTEXT_PARAM_WRAPPER_FIRST(pMsgContext->iContext) kDescNrcConditionsNotCorrect) as universal ignore parameter macro */
# define DESC_CONTEXT_PARAM_WRAPPER_INDEX(contextConst)              contextConst                                          /* Used for accessing context specific tables */
# define DESC_CONTEXT_PARAM_DUMMY_USE                                DESC_IGNORE_UNREF_PARAM(DESC_CONTEXT_PARAM_ONLY)      /* Used to avoid compiler warnings for unreferenced variables */
#else
# define DESC_CONTEXT_PARAM_TYPE_ONLY                                void
# define DESC_CONTEXT_PARAM_TYPE_FIRST
# define DESC_CONTEXT_PARAM_VALUE                                    ((vuint8)0)
# define DESC_CONTEXT_PARAM_ONLY
# define DESC_CONTEXT_PARAM_FIRST
# define DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY                          void
# define DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST
# define DESC_CONTEXT_PARAM_DEF_LOCAL
# define DESC_CONTEXT_PARAM_WRAPPER_ONLY(contextConst)
# define DESC_CONTEXT_PARAM_WRAPPER_FIRST(contextConst)
# define DESC_CONTEXT_PARAM_WRAPPER_INDEX(contextConst)              0
# define DESC_CONTEXT_PARAM_DUMMY_USE
#endif

/* Diag connection number (in case of TPMC with DYN_ID usage) */
#if ! defined(kDescDiagConnection)
# define kDescDiagConnection                                         ((vuint8)0xF0)
#endif

#if ! defined(kDescDiagObdConnection)
# define kDescDiagObdConnection                                      ((vuint8)0xF1)
#endif

#if ! defined(kDescDiagAddConnection)
# define kDescDiagAddConnection                                      ((vuint8)0xF2)
#endif

/* -- Context specific activity states -- */
#define kDescContextIdle                                             ((DescContextActivity)0x00)
#define kDescContextActiveRxBegin                                    ((DescContextActivity)0x01)
#define kDescContextActiveRxEnd                                      ((DescContextActivity)0x02)
#define kDescContextActiveProcess                                    ((DescContextActivity)0x04)
#define kDescContextActiveProcessEnd                                 ((DescContextActivity)0x08)
#define kDescContextActiveTxReady                                    ((DescContextActivity)0x10)
#define kDescContextActiveTx                                         ((DescContextActivity)0x20)
#define kDescContextActivePostProcess                                ((DescContextActivity)0x40)

/* Any transmission is currently active */
#define kDescContextActiveRx                                         (DescContextActivity)(kDescContextActiveRxBegin | kDescContextActiveRxEnd)


/* ---  Addressing methods  --- */
#define kDescPhysReq                                                 ((vuint8)0x01)
#define kDescFuncReq                                                 ((vuint8)0x02)

#define kDescPrimContext                                             (vuint8) 0
#define kDescSecContext                                              (vuint8) 0
#define kDescCallCycleUs                                             10000
#define kDescS1TimerTicks                                            500
/* P2 timeout in DescTask cycles. */
#define kDescP2Ticks                                                 4
/* P2Ex timeout in DescTask cycles. */
#define kDescP2StarTicks                                             399
/* P2 timeout time in 1ms resolution. */
#define kDescTimeValueP2                                             50
/* P2Ex timeout time in 10 ms resolution. */
#define kDescTimeValueP2Star                                         400
#define kDescStateValueInvalid                                       (DescStateGroup)0xFFFF

/* CANdesc supports at maximum as many states pro StateGroup as given below: */
#define kDescMaxAllowedNumStates                                     16
#define kDescNumStateSession                                         3
#define kDescStateSessionDefault                                     ((DescStateGroup)0x01)
#define kDescStateSessionProgramming                                 ((DescStateGroup)0x02)
#define kDescStateSessionExtended                                    ((DescStateGroup)0x04)
#define kDescNumStateSecurityAccess                                  3
#define kDescStateSecurityAccessLocked                               ((DescStateGroup)0x01)
#define kDescStateSecurityAccessUnlocked_Level_One                   ((DescStateGroup)0x02)
#define kDescStateSecurityAccessUnlocked_Level_Two                   ((DescStateGroup)0x04)
/* Error free diagnsotic request process */
#define kDescNrcNone                                                 ((DescNegResCode)0x00)
#define kDescExtNrcNone                                              ((vuint16)0x0000)

/* ---  Post handler status masks --- */
#define kDescPostHandlerStateOk                                      ((vuint8)0x01)
#define kDescPostHandlerStateNegResSent                              ((vuint8)0x02)
#define kDescPostHandlerStateTxFailed                                ((vuint8)0x04)

/* Default BOOT state */
#define kDescPowerOnInitParam                                        (DescInitParam)0

/**************************/
/* Communication control  */
/**************************/
/* Communication control */
#define kDescCommControlStateEnable                                  0x01
#define kDescCommControlStateDisable                                 0x00

/* CAN channel values */
#define kDescCommControlSubNetNumAll                                 0x00
#define kDescCommControlSubNetNumRx                                  0x0F

#define kDescCommControlSubNetNum01                                  0x01
#define kDescCommControlSubNetNum02                                  0x02
#define kDescCommControlSubNetNum03                                  0x03
#define kDescCommControlSubNetNum04                                  0x04
#define kDescCommControlSubNetNum05                                  0x05
#define kDescCommControlSubNetNum06                                  0x06
#define kDescCommControlSubNetNum07                                  0x07
#define kDescCommControlSubNetNum08                                  0x08
#define kDescCommControlSubNetNum09                                  0x09
#define kDescCommControlSubNetNum10                                  0x0A
#define kDescCommControlSubNetNum11                                  0x0B
#define kDescCommControlSubNetNum12                                  0x0C
#define kDescCommControlSubNetNum13                                  0x0D
#define kDescCommControlSubNetNum14                                  0x0E


/* No CAN channel shall be manipulated */
#define kDescCommControlCanChNone                                    0x0F

/* The corresponding CAN channel shall be disabled/enabled */

#define kDescCommControlCanCh01                                      0x00
#define kDescCommControlCanCh02                                      0x01
#define kDescCommControlCanCh03                                      0x02
#define kDescCommControlCanCh04                                      0x03
#define kDescCommControlCanCh05                                      0x04
#define kDescCommControlCanCh06                                      0x05
#define kDescCommControlCanCh07                                      0x06
#define kDescCommControlCanCh08                                      0x07
#define kDescCommControlCanCh09                                      0x08
#define kDescCommControlCanCh10                                      0x09
#define kDescCommControlCanCh11                                      0x0A
#define kDescCommControlCanCh12                                      0x0B
#define kDescCommControlCanCh13                                      0x0C
#define kDescCommControlCanCh14                                      0x0D

/* Message groups */
#define kDescCommControlMsgAppl                                      0x01
#define kDescCommControlMsgNm                                        0x02
#define kDescCommControlMsgTypeAll                                   ((vuint8) (kDescCommControlMsgAppl | kDescCommControlMsgNm))
#define kDescSecureTimer                                             0


/* -----------------------------------------------------------------------------
    &&&~ Datatype definitions
 ----------------------------------------------------------------------------- */

/* CANdesc internal boolean type (used for better code readability and code optimum) */
typedef vboolean DescBool;

typedef struct t_AddrInfoIsoTpTag
{
#if defined (TP_ENABLE_SINGLE_CHANNEL_TP)
  vuint8  Dummy;
#else
  vuint8  Connection;
#endif
#if defined (TP_ENABLE_NORMAL_ADDRESSING)       || \
    defined (TP_ENABLE_MIXED_11_ADDRESSING)
# if defined (TP_ENABLE_DYNAMIC_CHANNELS)
  vuint16 TransmitID;
  vuint16 ReceiveID;
# else
# endif
#endif
#if (TP_USE_EXTENDED_ADDRESSING == kTpOn) || \
    defined (TP_ENABLE_NORMAL_FIXED_ADDRESSING) || \
    defined(TP_FUNC_ENABLE_EXTENDED_ADDRESSING) || \
    defined (TP_ENABLE_MIXED_29_ADDRESSING)
  vuint8 SourceAddress;
  vuint8 TargetAddress;
#endif
#if ( kCanNumberOfChannels > 1 ) /* more than one canChannel ? */
  vuint8 CanChannel;
#endif
#if (TP_USE_EXTENDED_ADDRESSING == kTpOn)
# if (TP_USE_MULTIPLE_BASEADDRESS == kTpOn)
  vuint16 BaseAddress;
# endif
#endif
} t_AddrInfoIsoTp;

/* USDT Net result return type */
typedef enum
{
  kDescUsdtNetworkOk = 0,
  kDescUsdtNetworkFailed = 1,
  kDescUsdtNetBufferUnderrun = 2,
  kDescUsdtNetworkAbort = 3,
  kDescUsdtNetInvalidContext = 0xff
} t_descUsdtNetResult;

/* CANdesc internal handle type */
typedef vuint8 t_descHandle;

/* USDT Net bus handle type */
typedef vuint8 t_descUsdtNetBusHandle;

typedef enum
{
  kDescUsdtNetReqTypePhysical,
  kDescUsdtNetReqTypeFunctional,
  kDescUsdtNetReqTypeInternal
} t_descUsdtNetReqType;

typedef enum
{
  kDescUsdtResponseNone,
  kDescUsdtResponsePositive,
  kDescUsdtResponseRingBuffer,
  kDescUsdtResponseNegative,
  kDescUsdtResponseNegativeRCR_RP,
  kDescUsdtResponseNegativeApplRCR_RP,
  kDescUsdtResponseRoe,
  kDescUsdtResponsePeriodic,
  kDescUsdtResponseSpontaneous
} t_descUsdtNetResType;

typedef DESC_USDTNET_BUF_MEMORY_MODEL vuint8* DescUsdtNetMsg;

typedef enum
{
  kDescUsdtNetBusTypeNone, 
  kDescUsdtNetBusTypeIsoTp
} t_descUsdtNetBusType;
typedef union t_descUsdtNetAddrInfoTag
{
  t_AddrInfoIsoTp isoTp;
} t_descUsdtNetAddrInfo;
typedef struct
{
  t_descUsdtNetBusType  busType;        /* from DescUsdtNetDispatcher.h */
  t_descUsdtNetAddrInfo addressingInfo; /* from DescUsdtNetDispatcher.h */
} t_descUsdtNetBus;

typedef vuint8                                        DescContextActivity;
typedef vuint8                                        DescMsgItem;
typedef DESC_BUFFER_MEMORY_MODEL DescMsgItem *        DescMsg;
typedef DESC_BUFFER_MEMORY_MODEL DescMsgItem * const  DescConstPtr;
typedef V_MEMROM1 DescMsgItem V_MEMROM2 V_MEMROM3 *   DescMsgConst;
typedef vuint16                                       DescMsgLen;

/* Some groups can have more than 8 states */
typedef unsigned int DescStateGroup;

/* Negative response codes is normally single Byte */
typedef vuint8 DescNegResCode;
/* Additional information about a request */
typedef struct
{
  vbittype reqType   :2; /* 0x01: Phys 0x02: Func */
  vbittype resOnReq  :2; /* 0x01: Phys 0x02: Func */
  vbittype suppPosRes:1; /* 0x00: No   0x02: Yes  */
} DescMsgAddInfo;

/* Context information of a request */
typedef struct
{
  DescMsg             reqData;
  DescMsgLen          reqDataLen;
  DescMsg             resData;
  DescMsgLen          resDataLen;
  DescMsgAddInfo      msgAddInfo;
  DESC_CONTEXT_PARAM_DEF_LOCAL /* No iContext in non-parallel system */
  t_descUsdtNetBus    busInfo;
} DescMsgContext;

/* Main handler function pointer type */
typedef void DESC_API_CALL_TYPE (*DescMainHandler)     (DescMsgContext*);

/* not used */
typedef vuint8 DescInitParam;

/**************************/
/* Communication control  */
/**************************/
typedef struct
{
#if defined (DESC_ENABLE_RX_COMM_CONTROL)
  vbittype  dummy_gap           :2; /* Alignment gap */
  vbittype  rxPathState         :2; /* Enable/Disable */
#endif
  vbittype  txPathState         :2; /* Enable/Disable */
  vbittype  msgTypes            :2; /* Appl OR/AND NM */
  vbittype  subNetNumber        :4; /* Subnetwork channel number */
  vbittype  reqCommChannel      :4; /* up to 15 CAN channels */
  vbittype  commCtrlChannel     :4; /* up to 15 CAN channels (former commChannelCtrlTx)*/
}DescOemCommControlInfo;

typedef enum
{
  kDescSaStatusOk = 0,
  kDescSaStatusNok = 1
}DescSecurityAccessStatus;

typedef struct
{
  DescStateGroup            securityLevel;
  DescSecurityAccessStatus  status;
  vuint8                    dataLen;
  DescMsg                   dataPtr;
  DESC_CONTEXT_PARAM_DEF_LOCAL /* No iContext in non-parallel system */
} DescSecurityAccessContext;



/* -----------------------------------------------------------------------------
    &&&~ Function prototypes
 ----------------------------------------------------------------------------- */

#if defined(DESC_ENABLE_ROE_USDT_TRANSMITTER)
vuint8 DescRoeResponderIsFree(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
vuint8 DescRoeResponderTransmit(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST vuint8* dataPtr, vuint16 dataLength);
void DescRoeResponderReset(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

/* Reports the current diagnostic activity state (e.g. Idle, ActiveRx, ActiveProcess, ActiveTx.*/
DescContextActivity DESC_API_CALL_TYPE DescGetActivityState(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);

#if defined (DESC_ENABLE_ACCESS_TESTER_ADDRESS_API)
vuint8 DESC_API_CALL_TYPE DescGetTesterAddress(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

/*Get access to the current communication parameters */
t_descUsdtNetBus* DESC_API_CALL_TYPE DescGetCurrentBusInfo (DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);

#if defined (DESC_ENABLE_FORCE_RCR_RP)
/* Force CANdesc to send RCR-RP response */
void DESC_API_CALL_TYPE DescForceRcrRpResponse(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

#if defined (DESC_ENABLE_AUTO_STATES)
/* If needed - reset the whole state machine (only the states defined in the CDD!!!) */
void DESC_API_CALL_TYPE DescStateInit(void);
#endif

DescStateGroup DESC_API_CALL_TYPE DescGetStateSession(void);
void DESC_API_CALL_TYPE DescSetStateSession(DescStateGroup descState);
DescStateGroup DESC_API_CALL_TYPE DescGetStateSecurityAccess(void);
void DESC_API_CALL_TYPE DescSetStateSecurityAccess(DescStateGroup descState);
#if defined(DESC_ENABLE_AUTO_STATES)
/* Converts session id (sub-function) to session state */
DescStateGroup DESC_API_CALL_TYPE DescGetSessionStateOfSessionId(DescMsgItem sessionId);
/* Converts session state to session id (sub-function) */
DescMsgItem DESC_API_CALL_TYPE DescGetSessionIdOfSessionState(DescStateGroup sessionState);
/* Get access to the session specific timings */
void DESC_API_CALL_TYPE DescGetSessionTimings(DescStateGroup sessionState, vuint16* p2Time_1ms, vuint16* p2ExTime_10ms);
#endif

#if defined (DESC_ENABLE_MAINHANDLER_MULTICALL)
/* Use this function if you want your application to be polled for a certain service */
void DESC_API_CALL_TYPE DescStartRepeatedServiceCall(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescMainHandler mainHandler);
#endif
/* Activate linear response transmission */
void DESC_API_CALL_TYPE DescProcessingDone(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
/* Set a diagnostic error */
void DESC_API_CALL_TYPE DescSetNegResponse(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescNegResCode errorCode);
#if defined(DESC_ENABLE_GENERIC_USER_SERVICE_SUPPORT)
/* Returns the current service's Sid */
DescMsgItem DESC_API_CALL_TYPE DescGetServiceId(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

/* Initilize the CANdesc on PowerOnReset using this function */
void DESC_API_CALL_TYPE DescInitPowerOn(DescInitParam initParam);
/* Initilize the CANdesc if needed during the ECU  runtime using this function (status reset) */
void DESC_API_CALL_TYPE DescInit(DescInitParam initParam);

/* DescTask function must be call cyclically in the specified period of time */
void DESC_API_CALL_TYPE DescTask(void);

void DESC_API_CALL_TYPE DescTimerTask(void);
void DESC_API_CALL_TYPE DescStateTask(void);

/* Confirmation for seed generation */
void DescSecurityAccessSeedReady(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
/* Confirmation for key validation */
void DescSecurityAccessKeyChecked(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);

#if (kDescSecureTimer != 0)
/* Attempt counter access */
vuint8 DescGetAttemptCounterValue(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
void DescSetAttemptCounterValue(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST vuint8 value);
#endif



/* -----------------------------------------------------------------------------
    &&&~ ROM definitions
 ----------------------------------------------------------------------------- */

/* Version information */
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descMainVersion;
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descSubVersion;
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descBugFixVersion;



/* -----------------------------------------------------------------------------
    &&&~ Macro definitions
 ----------------------------------------------------------------------------- */

#if defined (DESC_ENABLE_FAR_BUFFER)
/* Copy RAM->FAR RAM */
# define DescCopyNByteRAM(t,s,l)                                     (VStdMemCpyRamToFarRam((t),(s),(l)))
/* Copy ROM->FAR RAM */
# define DescCopyNByteROM(t,s,l)                                     (VStdMemCpyRomToFarRam((t),(s),(l)))

# define DescMsgCopyRamToRam(t,s,l)                                  (VStdMemCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToRam(t,s,l)                               (VStdMemCpyFarRamToRam((t),(s),(l)))
# define DescMsgCopyRamToFarRam(t,s,l)                               (VStdMemCpyRamToFarRam((t),(s),(l)))
# define DescMsgCopyFarRamToFarRam(t,s,l)                            (VStdMemCpyFarRamToFarRam((t),(s),(l)))
# define DescMsgCopyRomToRam(t,s,l)                                  (VStdMemCpyRomToRam((t),(s),(l)))
# define DescMsgCopyRomToFarRam(t,s,l)                               (VStdMemCpyRomToFarRam((t),(s),(l)))
#else
/* TMS320 specifics */
# if defined (VStdMemCpyRamToRamElement)
#  define DescWrapCpyRamToRam(t,s,l)                                 (VStdMemCpyRamToRamElement((t),(s),(l)))
#  define DescWrapCpyRomToRam(t,s,l)                                 (VStdMemCpyRomToRamElement((t),(s),(l)))
# else
#  define DescWrapCpyRamToRam(t,s,l)                                 (VStdMemCpyRamToRam((t),(s),(l)))
#  define DescWrapCpyRomToRam(t,s,l)                                 (VStdMemCpyRomToRam((t),(s),(l)))
# endif
/* Copy RAM->RAM */
# define DescCopyNByteRAM(t,s,l)                                     (DescWrapCpyRamToRam((t),(s),(l)))
/* Copy ROM->RAM */
# define DescCopyNByteROM(t,s,l)                                     (DescWrapCpyRomToRam((t),(s),(l)))

# define DescMsgCopyRamToRam(t,s,l)                                  (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToRam(t,s,l)                               (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyRamToFarRam(t,s,l)                               (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToFarRam(t,s,l)                            (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyRomToRam(t,s,l)                                  (DescWrapCpyRomToRam((t),(s),(l)))
# define DescMsgCopyRomToFarRam(t,s,l)                               (DescWrapCpyRomToRam((t),(s),(l)))
#endif

/* Global initialization of the state machine */
#if defined (DESC_ENABLE_AUTO_STATES)
/* Func prototype is used */
#else
# define DescStateInit()                                             /* Not used */
#endif

/* Data assemble/deassemble macros */
/* compose from byte stream a 16 bit data */
#define DescMake16Bit(hiByte,loByte)                                 ((vuint16)((((vuint16)(hiByte))<<8)| \
                                                                     ((vuint16)(loByte))))
/* compose from byte stream a 32 bit data */
#define DescMake32Bit(hiHiByte,hiLoByte,loHiByte,loLoByte)           ((vuint32)((((vuint32)(hiHiByte))<<24)| \
                                                                     (((vuint32)(hiLoByte))<<16)| \
                                                                     (((vuint32)(loHiByte))<<8) | \
                                                                     ((vuint32)(loLoByte))))
/* decompose 16 bit data in byte stream */
#define DescGetHiByte(data)                                          ((vuint8)(((vuint16)(data))>>8))
#define DescGetLoByte(data)                                          ((vuint8)(data))

/* decompose 32 bit data in byte stream */
#define DescGetHiHiByte(data)                                        ((vuint8)(((vuint32)(data))>>24))
#define DescGetHiLoByte(data)                                        ((vuint8)(((vuint32)(data))>>16))
#define DescGetLoHiByte(data)                                        ((vuint8)(((vuint32)(data))>>8))
#define DescGetLoLoByte(data)                                        ((vuint8)(data))

/**************************/
/* Communication control  */
/**************************/
/* Acknowledge the communication control */
#define DescCommCtrlChecked(DESC_CONTEXT_PARAM_ONLY)                 (DescProcessingDone(DESC_CONTEXT_PARAM_ONLY))
/* Communication control anti-panic solution :)*/
void DESC_API_CALL_TYPE DescEnableCommunication(void);

/**************************/
/* Session control        */
/**************************/
/* Acknowledge the session transition */
#if defined (DESC_ENABLE_PERMANENT_MAINHANDLER_MULTICALL)
void DescSessionTransitionChecked(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#else
/* Acknowledge the session transition */
# define DescSessionTransitionChecked(DESC_CONTEXT_PARAM_ONLY)       (DescProcessingDone(DESC_CONTEXT_PARAM_ONLY))
#endif



#endif /* __DESC_H__ */
